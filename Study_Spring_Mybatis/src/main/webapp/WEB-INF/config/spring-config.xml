<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!--  이미지 -->
	<resources mapping="/images/**" location="/WEB-INF/static/images/" />
	<!-- css와 javascript -->
	<resources mapping="/common/**" location="/WEB-INF/static/common/" />
	
	<!-- prefix와 suffix를 이용해서 뷰의 정보를 만들어 내는 뷰리졸버 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	</beans:bean>
	
	
	<!-- ========================tiles 설정 =============================================================================== -->
	<!-- 1. tiles설정 파일을 읽을 수 있도록 등록 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/**/*-tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- 2. tiles프레임워크 기반으로 뷰를 만들 수 있도록 뷰리졸버 등록 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
		<beans:property name="order" value="1"/>
	</beans:bean>
	<!-- =================================================================================================================== -->
	
	<!-- ========================Mybatis 설정 =============================================================================== -->
	
	<!-- 1. Connection Pool등록 -->
	<beans:bean id="ds" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<beans:property name="jndiName" value="jdbc/myspring"/>
		<beans:property name="resourceRef" value="true"/>
	</beans:bean>
	
	<!-- 2. Spring에서 MyBatis의 핵심클래스인 SqlSession사용할 수 있도록 하기 위해서 등록
			SqlSession객체를 만들어서 리턴하는 Factory객체  -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="ds"/>
		<beans:property name="configLocation" value="/WEB-INF/config/mybatis-config.xml"/>
	</beans:bean>
	
	<!-- 3. MyBatis에서 sql문을 처리하기 위한 핵심 클래스 (SqlSession객체) 생성 -->
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory" />
	
	</beans:bean>
	
	
	<!-- =================================================================================================================== -->
	<context:component-scan base-package="com.sds.erp" />
	<context:component-scan base-package="main"/>
	<context:component-scan base-package="multi"/>
	
	
	
</beans:beans>
